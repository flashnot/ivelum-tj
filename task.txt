Тестовое задание: cпроектировать и написать абстрактный сервис api с фермой воркеров.

Все технологии, инструменты, формат сообщений, api, протоколы и т.д. на выбор исполнителя, язык - python. Оцениваться будет архитектура, реализация, "красота" кода и проработка нюансов.


Подробности:
  Запросы идут через api с идентификацией пользователя.

  В api нужно реализовать 3 функции: 
    1. отправка запроса/списка_запросов
    2. получение статуса задания
    3. получение результата
    например(схематичное описание): 
      send([msg1, msg2, msg3, ...]) -> success:task_id|error:'сообщение об ошибке'
        получает список абстрактных данных( в нашем случае это массив строк ), возвращает индикатор выполнения и номер задачи на сервере в случае успешной постановки задачи или сообщение об ошибке в случае неуспешного
      status(task_id) -> wait|success|error:'сообщение об ошибке'
        получает статус выполнения задачи
      result(task_id) -> 'ok':result|error:'сообщение об ошибке'
        забирает результат выполнения задачи по id, в случае успеха возвращает результат, в остальных случаях возвращает сообщение об ошибке

  Воркеры могут находятся на других серверах, количество воркеров может изменяться и управляется отдельно(вне текущей задачи). 

  Воркер эмулирует тяжелый(длительный) запрос(например сложная математика или запрос к внешнему ресурсу или обработка графики и т.д.) и основной функционал - в нашем примере состоит из функции sleep()
    например(схематичное описание):
      def work(t):
          sleep(t)
          return (t, time.time())

  Результат хранится и может быть запрошен пользователем в любое время. 

  Пользователь может получить статус и результат только по той задаче, которую он сам создал. 

  Доп. баллы: сделать админку, приоритеты задач и т.д.
